version: '3.2'

volumes:
  esdata1:
  kibana-plugins:
  kibana-bundle:
 
services:
  # https://github.com/wurstmeister/zookeeper-docker
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
    - "2181:2181"

  # https://hub.docker.com/r/confluentinc/cp-kafka/
  kafka:
    container_name: kafka
    image: wurstmeister/kafka:2.12-2.2.1
    environment:
      ## the >- used below infers a value which is a string and properly 
      ## ignore the multiple lines resulting in one long string: 
      ## https://yaml.org/spec/1.2/spec.html
     
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENERS: >-
        LISTENER_DOCKER_INTERNAL://:19092,
        LISTENER_DOCKER_EXTERNAL://:9092

      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: >- 
        LISTENER_DOCKER_INTERNAL:PLAINTEXT,
        LISTENER_DOCKER_EXTERNAL:PLAINTEXT

      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_LOGGERS: >- 
        kafka.controller=INFO,
        kafka.producer.async.DefaultEventHandler=INFO,
        state.change.logger=INFO   
    ports:
    - 9092:9092
    depends_on:
    - zookeeper
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    
  db:
    image: mysql
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: "dani"   
      MYSQL_DATABASE: "DEV_MAGENTO_07"      
    volumes:
      - /var/lib/mysql:/var/lib/mysql
    networks:
      - mysql-compose-network
      
  adminer:
    image: adminer
    ports:
      - 8484:8080
    networks:
      - mysql-compose-network      

  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.7.0"
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"     
      - discovery.type=single-node
    expose:
      - "9200"
    ports:
      - "9200:9200"
    volumes:
      - /var/elasticsearch/data:/var/elasticsearch/data
      
  nifi:
    container_name: nifi
    image: apache/nifi:latest
    restart: unless-stopped
    volumes:
      - /var/nifi:/var/nifi
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - elasticsearch
    environment:
      - NIFI_WEB_HTTP_PORT=8080
      
  mongodb:   
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - 27017:27017
    volumes:
      - /data/db:/data/db
networks: 
  mysql-compose-network:
    driver: bridge
